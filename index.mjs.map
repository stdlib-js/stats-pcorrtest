{"version":3,"file":"index.mjs","sources":["../lib/print.js","../lib/validate.js","../lib/main.js","../lib/pcorr.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport roundn from '@stdlib/math-base-special-roundn';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '1Ln3L', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '1Ln3P', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '1Ln2o', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True correlation coefficient is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isnan from '@stdlib/assert-is-nan';\nimport indexOf from '@stdlib/utils-index-of';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar alternative = [ 'two-sided', 'less', 'greater' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.rho] - correlation coefficient unter HO\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.01,\n*     'rho': 0.8\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '1Ln2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif (\n\t\t\t!isNumber( opts.alpha ) ||\n\t\t\tisnan( opts.alpha ) ||\n\t\t\topts.alpha < 0.0 ||\n\t\t\topts.alpha > 1.0\n\t\t) {\n\t\t\treturn new TypeError( format( '1LnDR', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( indexOf( alternative, opts.alternative ) === -1 ) {\n\t\t\treturn new TypeError( format( '1Ln4S', 'alternative', alternative.join( '\", \"' ), opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'rho' ) ) {\n\t\topts.rho = options.rho;\n\t\tif (\n\t\t\t!isNumber( opts.rho ) ||\n\t\t\tisnan( opts.rho ) ||\n\t\t\topts.rho < -1.0 ||\n\t\t\topts.rho > 1.0\n\t\t) {\n\t\t\treturn new TypeError( format( '1LnA1', 'rho', opts.rho ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isNumberArray } from '@stdlib/assert-is-number-array';\nimport isTypedArrayLike from '@stdlib/assert-is-typed-array-like';\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport { factory as quantileFactory } from '@stdlib/stats-base-dists-normal-quantile';\nimport { factory as cdfFactory } from '@stdlib/stats-base-dists-normal-cdf';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport atanh from '@stdlib/math-base-special-atanh';\nimport tanh from '@stdlib/math-base-special-tanh';\nimport tCDF from '@stdlib/stats-base-dists-t-cdf';\nimport sqrt from '@stdlib/math-base-special-sqrt';\nimport min from '@stdlib/math-base-special-min';\nimport print from './print.js'; // eslint-disable-line stdlib/no-redeclare\nimport pcorr from './pcorr.js';\nimport validate from './validate.js';\n\n\n// VARIABLES //\n\nvar normQuantile = quantileFactory( 0.0, 1.0 );\nvar normCDF = cdfFactory( 0.0, 1.0 );\n\n\n// MAIN //\n\n/**\n* Computes a Pearson product-moment correlation test between paired samples.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.rho=0.0] - correlation under H0\n* @throws {TypeError} first argument has to be a typed array or array of numbers\n* @throws {TypeError} second argument has to be a typed array or array of numbers\n* @throws {RangeError} first and second arguments must have the same length\n* @throws {Error} first and second arguments must be arrays having the same length\n* @throws {Error} first and second arguments must contain at least four elements\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 2, 4, 3, 1, 2, 3 ];\n* var y = [ 3, 2, 4, 1, 2, 4 ];\n* var out = pcorrTest( x, y );\n*/\nfunction pcorrTest( x, y, options ) {\n\tvar method;\n\tvar alpha;\n\tvar cint;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar rho;\n\tvar val;\n\tvar df;\n\tvar se;\n\tvar n;\n\tvar r;\n\tvar z;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( '1Ln8R', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( '1Ln9k', y ) );\n\t}\n\tn = x.length;\n\tif ( n !== y.length ) {\n\t\tthrow new RangeError( format('1Ln1F') );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( n < 4 ) {\n\t\tthrow new Error( format('1Ln1H') );\n\t}\n\tif ( opts.rho === void 0 ) {\n\t\trho = 0.0;\n\t} else {\n\t\trho = opts.rho;\n\t}\n\tif ( opts.alternative === void 0 ) {\n\t\talt = 'two-sided';\n\t} else {\n\t\talt = opts.alternative;\n\t}\n\n\tr = pcorr( x, y );\n\tz = atanh( r );\n\tse = 1.0 / sqrt( n - 3 );\n\tif ( rho === 0.0 ) {\n\t\t// Use t-test for H0: rho = 0.0 vs H1: rho != 0.0...\n\t\tmethod = 't-test for Pearson correlation coefficient';\n\t\tdf = n - 2;\n\t\tstat = sqrt( df ) * r / sqrt( 1.0 - (r*r) );\n\t\tswitch ( alt ) {\n\t\tcase 'greater':\n\t\t\tpval = 1.0 - tCDF( stat, df );\n\t\t\tbreak;\n\t\tcase 'less':\n\t\t\tpval = tCDF( stat, df);\n\t\t\tbreak;\n\t\tcase 'two-sided':\n\t\tdefault:\n\t\t\tpval = 2.0 * min( tCDF( stat, df), 1.0 - tCDF( stat, df ));\n\t\t\tbreak;\n\t\t}\n\t} else {\n\t\t// Use large-sample normality to calculate p-value based on Fisher's z transform...\n\t\tmethod = 'Fisher\\'s z transform test for Pearson correlation coefficient';\n\t\tstat = ( z - atanh( rho ) ) * sqrt( n - 3 );\n\t\tswitch ( alt ) {\n\t\tcase 'greater':\n\t\t\tpval = normCDF( -stat );\n\t\t\tbreak;\n\t\tcase 'less':\n\t\t\tpval = 1.0 - normCDF( -stat );\n\t\t\tbreak;\n\t\tcase 'two-sided':\n\t\tdefault:\n\t\t\tpval = 2.0 * min( normCDF( -stat ), 1.0 - normCDF( -stat ));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tswitch ( alt ) {\n\tcase 'greater':\n\t\tcint = [ tanh( z - ( se*normQuantile( 1.0 - alpha ) ) ), 1.0 ];\n\t\tbreak;\n\tcase 'less':\n\t\tcint = [ -1.0, tanh( z + ( se*normQuantile( 1.0 - alpha ) ) ) ];\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tval = se * normQuantile( 1.0 - ( alpha/2.0 ) );\n\t\tcint = [ tanh( z - val ), tanh( z + val ) ];\n\t\tbreak;\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', method );\n\tsetReadOnly( out, 'nullValue', rho );\n\tsetReadOnly( out, 'pcorr', r );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pcorrTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport max from '@stdlib/math-base-special-max';\nimport min from '@stdlib/math-base-special-min';\nimport sqrt from '@stdlib/math-base-special-sqrt';\nimport variance from '@stdlib/stats-base-variance';\nimport mean from '@stdlib/stats-base-mean';\n\n\n// MAIN //\n\n/**\n* Computes the Pearson product-moment correlation coefficient between `x` and `y`.\n*\n* @private\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @returns {number} correlation coefficient\n*\n* @example\n* var x = [ 1.0, 2.0, 2.0, 1.0 ];\n* var y = [ 1.8, 2.2, 2.5, 1.4 ];\n* var r = pcorr( x, y );\n* // returns ~0.905\n*/\nfunction pcorr( x, y ) {\n\tvar denom;\n\tvar num;\n\tvar out;\n\tvar xy;\n\tvar xm;\n\tvar ym;\n\tvar i;\n\tvar n;\n\n\tn = x.length;\n\txm = mean( n, x, 1 );\n\tym = mean( n, y, 1 );\n\txy = 0.0;\n\tfor ( i = 0; i < n; i++ ) {\n\t\txy += x[ i ] * y[ i ];\n\t}\n\tnum = xy - ( n * xm * ym );\n\tdenom = ( n-1 ) * sqrt(variance(n, 1, x, 1)) * sqrt(variance(n, 1, y, 1) );\n\tout = num / denom;\n\n\t// Handle rounding errors:\n\treturn max( min( out, 1.0 ), -1.0 );\n}\n\n\n// EXPORTS //\n\nexport default pcorr;\n"],"names":["print","opts","decision","dgts","str","arguments","length","isObject","TypeError","format","hasOwnProp","isPositiveInteger","digits","isBoolean","this","method","alternative","nullValue","roundn","pValue","statistic","alpha","ci","rejected","normQuantile","quantileFactory","normCDF","cdfFactory","pcorrTest","x","y","options","cint","pval","stat","alt","err","out","rho","val","df","se","n","r","z","isTypedArrayLike","isNumberArray","RangeError","isNumber","isnan","indexOf","join","validate","Error","denom","num","xy","xm","ym","i","mean","sqrt","variance","max","min","pcorr","atanh","tCDF","tanh","setReadOnly"],"mappings":"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"}