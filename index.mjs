// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-cdf@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-atanh@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-tanh@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-cdf@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-min@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-max@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-variance@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";var y=h,E=p,T=c.isPrimitive,k=j,V=f,O=n;var F=function(t){var e,s,i;if(s=4,e=!0,arguments.length>0){if(!E(t))throw new TypeError(O("invalid argument. First argument must be an options object. Value: `%s`.",t));if(k(t,"digits")){if(!y(t.digits))throw new TypeError(O("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));s=t.digits}if(k(t,"decision")){if(!T(t.decision))throw new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));e=t.decision}}switch(i="",i+=this.method,i+="\n\n",i+="Alternative hypothesis: ",i+="True correlation coefficient is ",this.alternative){case"less":i+="less than ";break;case"greater":i+="greater than ";break;default:i+="not equal to "}return i+=this.nullValue,i+="\n\n",i+="    pValue: "+V(this.pValue,-s)+"\n",i+="    statistic: "+V(this.statistic,-s)+"\n",i+="    "+100*(1-this.alpha)+"% confidence interval: ["+V(this.ci[0],-s)+","+V(this.ci[1],-s)+"]",i+="\n\n",e&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i},P=v,q=m,A=d,z=b,D=u;var R=function(t,e){var s,i,r,n,a,o,l;for(l=t.length,n=D(l,t,1),a=D(l,e,1),r=0,o=0;o<l;o++)r+=t[o]*e[o];return i=r-l*n*a,s=(l-1)*A(z(l,1,t,1))*A(z(l,1,e,1)),P(q(i/s,1),-1)},S=g.isPrimitive,B=p,C=x,G=w,H=j,I=n,J=["two-sided","less","greater"];var K=function(t,e){return B(e)?H(e,"alpha")&&(t.alpha=e.alpha,!S(t.alpha)||C(t.alpha)||t.alpha<0||t.alpha>1)?new TypeError(I("invalid option. `%s` option must be a number in `[0,1]`. Option: `%s`.","alpha",t.alpha)):H(e,"alternative")&&(t.alternative=e.alternative,-1===G(J,t.alternative))?new TypeError(I('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",J.join('", "'),t.alternative)):H(e,"rho")&&(t.rho=e.rho,!S(t.rho)||C(t.rho)||t.rho<-1||t.rho>1)?new TypeError(I("invalid option. `%s` option must be a number in [-1,1]. Option: `%s`.","rho",t.rho)):null:new TypeError(I("invalid argument. Options argument must be an object. Value: `%s`.",e))},L=t.primitives,M=e,N=s,Q=i.factory,U=r.factory,W=n,X=a,Y=o,Z=l,$=d,_=m,tt=F,et=R,st=K,it=Q(0,1),rt=U(0,1);var nt=function(t,e,s){var i,r,n,a,o,l,d,m,h,p,c,j,f,v,b,u;if(!M(t)&&!L(t))throw new TypeError(W("invalid argument. First argument `x` must be a numeric array. Value: `%s`.",t));if(!M(e)&&!L(e))throw new TypeError(W("invalid argument. Second argument `y` must be a numeric array. Value: `%s`.",e));if((v=t.length)!==e.length)throw new Error("invalid arguments. Arguments `x` and `y` must be arrays of the same length");if(a={},s&&(m=st(a,s)))throw m;if(r=void 0===a.alpha?.05:a.alpha,v<4)throw new Error("not enough observations. `x` and `y` must contain at least four observations.");if(p=void 0===a.rho?0:a.rho,d=void 0===a.alternative?"two-sided":a.alternative,b=et(t,e),u=X(b),f=1/$(v-3),0===p)switch(i="t-test for Pearson correlation coefficient",l=$(j=v-2)*b/$(1-b*b),d){case"greater":o=1-Z(l,j);break;case"less":o=Z(l,j);break;default:o=2*_(Z(l,j),1-Z(l,j))}else switch(i="Fisher's z transform test for Pearson correlation coefficient",l=(u-X(p))*$(v-3),d){case"greater":o=rt(-l);break;case"less":o=1-rt(-l);break;default:o=2*_(rt(-l),1-rt(-l))}switch(d){case"greater":n=[Y(u-f*it(1-r)),1];break;case"less":n=[-1,Y(u+f*it(1-r))];break;default:c=f*it(1-r/2),n=[Y(u-c),Y(u+c)]}return N(h={},"rejected",o<=r),N(h,"alpha",r),N(h,"pValue",o),N(h,"statistic",l),N(h,"ci",n),N(h,"alternative",d),N(h,"method",i),N(h,"nullValue",p),N(h,"pcorr",b),N(h,"print",tt),h};export{nt as default};
//# sourceMappingURL=index.mjs.map
